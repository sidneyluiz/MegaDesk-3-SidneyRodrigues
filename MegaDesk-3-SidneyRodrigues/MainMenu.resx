<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureDeskBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>